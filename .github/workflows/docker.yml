name: Docker
on:
  pull_request:
  push:
    branches:
      - main
      - WV-61

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/checkout@v3
      - name: build
        run: | 
          npm i
          npm run build
      - name: Build dockerfile
        run: |
          docker build . -t rius/wave.music.front
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push rius/wave.music.front

  k8s:
    runs-on: ubuntu-latest
    name: k8s
    #    needs:
    #      - dockerDeploy
    steps:
      - uses: actions/checkout@v1
      - name: k8s install
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl
          export PATH="~/.local/bin/kubectl:$PATH"
          kubectl version --client --output=yaml
      - name: create config
        run: |
          echo "${{ secrets.K8S_CONFIG }}" > k8s.yaml
          export KUBECONFIG="$(pwd)/k8s.yaml"
          kubectl apply -f ./k8s/ -R
          kubectl rollout restart deploy
